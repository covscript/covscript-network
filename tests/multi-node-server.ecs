import netutils

var (_, role, worker_count, master_addr, master_port) = context.cmd_args

var config = {
    "keep_alive_timeout": 5000,
    "max_keep_alive": 100,
    "worker_count": worker_count,
    "wwwroot": runtime.get_current_dir() + system.path.separator + "wwwroot",
    "port": 8080
} as hash_map

netutils.log_stream = iostream.ofstream("./netutils_" + role + ".log")
netutils.log("Log started for role: " + role)

var server = (new netutils.http_server)
    .set_wwwroot(config.wwwroot)
    .set_config(config)
    .bind_code(netutils.state_codes.code_404, "404.html")
    .bind_func("/test", [](server, session, data){
        # Simple ECHO Server
        if session.method != "POST"
            session.send_response(netutils.state_codes.code_400, "Please use POST method. Data = " + data, "text/plain")
        else
            session.send_response(netutils.state_codes.code_200, data, "text/plain")
        end
    })

# multi-node setup
if role == "master"
    server.set_master(master_addr, master_port as integer).listen(config.port)
    system.out.println("Starting HTTP server at http://" + netutils.local_addr() + ":" + config.port + "/")
else
    server.set_slave(master_addr, master_port as integer)
end

server.run()
